apply plugin: "java"

sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    jcenter()
}

dependencies {
    testCompile "junit:junit:4.11"
    testCompile "org.testng:testng:6.1.1"
    compile "args4j:args4j:2.0.21"
}

loadConfiguration()

def loadConfiguration() {
    def pitVersion = hasProperty("pit-version") ? getProperty("pit-version") : "0.33"
    project.ext.set("pitVersion", pitVersion)
}

task cleanGenerated(type: Delete) {
    description 'Cleans generated files'
    delete 'src/main/java/ru/gvsmirnov/sample/generated'
    delete 'src/test/java/ru/gvsmirnov/sample/generated'
}

task generate(type: JavaExec, dependsOn: [classes, cleanGenerated]) {
    description 'Generates the standard sample classes'
    main 'ru.gvsmirnov.sample.generator.LargeClassGenerator'
    classpath sourceSets.main.runtimeClasspath

    if (project.hasProperty('genArgs')) {
        args genArgs.split(" ")
    }
}

buildscript {
    repositories {
        jcenter()
        mavenLocal()
    }
    dependencies {
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:0.33.2-SNAPSHOT'
    }
}


apply plugin: "pitest"

test {
    useTestNG()
    options.excludeGroups = ['beta']
}


pitest {
    pitestVersion = "$pitVersion"
    targetClasses = ["ru.gvsmirnov.sample*"]
    timestampedReports = false
    excludedGroups = ['beta']
}
